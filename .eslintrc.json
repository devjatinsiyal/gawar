{
  "env": {
    "es6": true
  },
  "extends": [
    "next/core-web-vitals",
    "plugin:react/recommended",
    "standard-with-typescript",
    "plugin:@next/next/recommended",
    "prettier"
  ],
  "overrides": [],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "tsconfig.json"
  },
  "plugins": ["react", "prettier", "react-hooks"],
  "rules": {
    "react/react-in-jsx-scope": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react/no-unstable-nested-components": [
      "error",
      {
        "allowAsProps": false
      }
    ],
    "no-use-before-define": "error",
    "no-console": 0,
    "no-debugger": "warn",
    "no-alert": "warn",
    "jsx-quotes": [2, "prefer-single"],
    "no-multi-spaces": 2,
    "max-len": [
      "warn",
      {
        "code": 180,
        "comments": 220,
        "ignorePattern": "import .*"
      }
    ],
    "eqeqeq": ["error", "smart"],
    "no-fallthrough": "error",
    "object-curly-spacing": [2, "always"],
    "no-trailing-spaces": "error",
    "react/display-name": "off",
    "complexity": [
      "error",
      {
        "max": 50
      }
    ],
    "constructor-super": "error",
    "no-new-wrappers": "error",
    "no-shadow": "error",
    "no-throw-literal": "error",
    "no-undef-init": "error",
    "no-unused-expressions": "error",
    "no-var": "error",
    "prefer-spread": "warn",
    "no-empty-function": "error",
    "no-useless-escape": "warn",
    "@typescript-eslint/explicit-function-return-type": [
      "warn",
      {
        "allowExpressions": true
      }
    ],
    "@typescript-eslint/ban-types": "error",
    "@typescript-eslint/consistent-type-assertions": "warn",
    "@typescript-eslint/member-ordering": "error",
    "@typescript-eslint/no-empty-interface": "off",
    "@typescript-eslint/no-explicit-any": "off",
    // Looks like good practice. Optional. Can be removed
    "@typescript-eslint/naming-convention": [
      "warn",
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^I[A-Z]",
          "match": false
        }
      }
    ],
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-inferrable-types": "error",
    "@typescript-eslint/no-misused-new": "error",
    "@typescript-eslint/no-misused-promises": "off",
    "@typescript-eslint/no-this-alias": "error",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-includes": "error",
    "@typescript-eslint/prefer-namespace-keyword": "error",
    "@typescript-eslint/prefer-string-starts-ends-with": "error",
    "@typescript-eslint/quotes": "off",
    "@typescript-eslint/require-await": "warn",
    "@typescript-eslint/unified-signatures": "error",
    "@typescript-eslint/strict-boolean-expressions": "off",
    "@typescript-eslint/return-await": "warn",
    "@typescript-eslint/prefer-ts-expect-error": "off",
    "@typescript-eslint/prefer-optional-chain": "off",
    "@typescript-eslint/no-var-requires": "warn"
  }
}
